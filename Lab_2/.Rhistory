install.packages("rmarkdown")
library(rmarkdown)
library("rmarkdown")
library(ggplot2)
library(datasets)
library(gridExtra)
library(GGally)
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("GGally")
library("dplyr")
install.packages("dplyr")
source("calc.R")
data("mtcars")
slope <- calc_slope(mtcars$wt, mtcars$mpg)
print(slope)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
intercept <- mean(y) - calc_slope(x,y)*mean(x)
print(intercept)
install.packages("UsingR")
library(UsingR)
data("galton")
library(reshape)
?melt
head(galton)
long <- melt(galton)
head(long)
lomg
long
g <- ggplot(long, aes(x = value, fill=variable))
g <- g + geom_histogram(colour = "black", binwidth = 1)
g <- g + facet_grid(.~ variable)
g
install.packages("manipulate")
library("manipulate")
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child))
g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2,sep ="")))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
myHist <- function(mu){
+ mse <- mean((galton$child - mu)^2)
+ g <- ggplot(galton, aes(x = child))
+ g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
+ g <- g + geom_vline(xintercept = mu, size = 3)
+ g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep ="")))
+ g
+ }
myHist <- function(mu){
+ mse <- mean((galton$child - mu)^2)
+ g <- ggplot(galton, aes(x = child))
+ g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
+ g <- g + geom_vline(xintercept = mu, size = 3)
+ g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep =""))
+ g
+ }
myHist <- function(mu){mse <- mean((galton$child - mu)^2)
+ g <- ggplot(galton, aes(x = child))
+ g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
+ g <- g + geom_vline(xintercept = mu, size = 3)
+ g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep =""))
+ g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
myHist <- function(mu){
+ mse <- mean((galton$child - mu)^2)
+ g <- ggplot(galton, aes(x = child))
+ g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
+ g <- g + geom_vline(xintercept = mu, size = 3)
+ g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep =""))
+ g
+ }
myHist <- function(mu){
+ mse <- mean((galton$child - mu)^2)
+ g <- ggplot(galton, aes(x = child))
+ g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
+ g <- g + geom_vline(xintercept = mu, size = 3)
+ g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep =""))
+ g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child))
g <- g  + geom_histogram(fill="salmon", colour="black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ",mu,", MSE = ",round(mse,2),sep =""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coeff(lm(y ~ x))
coef(lm(y ~ x))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
u <- mean(x)
var <- 1/length(x)*sum((x - u)^2)
x_new <- x - u / sqrt(var)
var <- 1/(length(x)-1)*sum((x - u)^2)
x_new <- x - u / sqrt(var)
t <- (x - u)^2
t <- t/(length(x) -1 )
t <- sqrt(t)
x_new <- x - u
x_new <- x_new/t
w <- c(2, 1, 3, 1)
x <- c(0.18, -1.54, 0.42, 0.95)
y <- x*w
y <- mean(y)
data(mtcars)
coef(lm(mtcars$mpg ~ mtcars$wt))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x -1)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
u <- mean(x)
var <- 1/(length(x)-1)*sum((x - u)^2)
sd <- sqrt(var)
z <- x - u/sd
z
mean(z)
z <- (x-u)/sd
z
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)*mean(w)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summar(fit)
summary(fit)
summary(fit)$sigma
sumCoef <- summary(fit)$coef
sumCoef
data("mtcars")
fit <- (mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coef
summary(fit)
fit <- lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summray(fit)$coef
sumCoef <- summary(fit)$coef
sumCoef
?mtcars
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
data("mtcars")
fit <- lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coef
sumCoef[1,1] + c(1,-1)*qt(.975, df= fit$df)*sumCoef[1,2]
exp <- fit$coefficients[1] + mean(mtcars$wt)*fit$coefficients[2]
exp
exp - 2 * 0.5591
summary(fit)
fit[[1]][1] + 3 * fit[[1]][2]
summary(fit)
2 * (fit$coefficients[2] - 2 * 0.5591)
attributes(fit)
w.c <- fit$residuals^2
fit.c <- lm(mtcars$mpg ~ mtcars$wt -1)
fit.c.r <- fit.c$residuals ^2
sum(w.c) / sum(fit.c.r)
fit.c <- lm(mtcars$mpg ~1)
fit.c.r <- fit.c$residuals ^ 2
sum(w.c) / sum(fit.c.r)
swirl()
swirlR()
library(swirl)
install.packages("swirl")
library(swirl)
install_from_swirl("Regresion Models")
swirl()
require(datasets)
data("swiss")
?swiss
require(GGally)
require(ggplot2)
g = ggpairs(swiss, lower = list(continuous = "smooth"), params = c(method = "loess"))
data("mtcars")
y <- mtcars$mpg
x1 <- mtcars$cyl
x2 <- mtcars$wt
fit <- lm(y ~ x1 + x2)
summary(fit)$ceof
summary(fit)$coef
head(x1)
test <- factor(x1)
head(test)
fit <- lm(y ~ c(x1,test))
fit <- lm(y ~ x1 + test )
summary(fit)$coef
a <- summary(fit)$coef[2,0]
a
a <- summary(fit)$coef
a[2,0]
a[0,2]
a(0,2)
a
a[1:]
a[2:3]
4*a[0:3]
fit <- lm(y ~ factor(x1) + x2)
summary(fit)$coef
fit2 <- lm(y ~ factor(x1))
summary(fit)$coef
summary(fit2)$coef
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
round(hatvalues(fit),3)
dfbetas(fit)
## Residual Analysis and Diagnostics
dataset(Wage)
dataset("Wage")
library(datasets)
datasets("Wage")
dataset(Wage)
w <- Wage
install.packages("tidyverse")
install.packages(c("nycflights13","gapminder","Lahman"))
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y =hwy))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y =hwy))
ggplot(data = <DATA>) +
ggplot(data = <DATA>) +
<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
ggplot(data=mpg)
nrows(mpg)
mpg.rows()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = year))
?geom_point
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = year))
ggplot(data = mpg) +
geom_point(mapping = aes(color = displ < 5)
ggplot(data = mpg) +
geom_point(mapping = aes(color = displ < 5)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,y = hwy)) +
facet_grid(~class, nrow = 2)
facet_grid(~class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,y = hwy)) +
facet_grid(~class)
install.packages("ggmap")
library(xlsx2)
install.packages("xlsx")
library(xlsx)
urlfile <- "https://data.cdc.gov/api/views/rqg5-mkef/rows.csv?accessType=DOWNLOAD"
destfile <- "data.csv"
download.file(urlfile,destfile, method = curl)
download.file(urlfile,destfile, mode = "wb")
urlfile <- "https://data.cdc.gov/api/views/rqg5-mkef/rows.csv?accessType=DOWNLOAD"
download.file(urlfile,destfile="./motor.csv", method = "curl")
load("motor.csv")
motor_data <- read.csv("./motor.csv")
View(motor_data)
names(motor_data)
View(motor_data)
?grep
test <- grep((//,//),motor_data[,2])
test <- grep("(//,//)",motor_data[,2])
head(motor_data[,2])
install.packages("gpclib")
install.packages("rgeos")
install.packages("maptools")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("spatialEco")
install.packages("dplyr")
install.packages("ggmap")
install.packages("ggthemes")
install.packages("RColorBrewer")
library("reshape2")
p1 <- melt(motor_data, id.vars = "State")
View(p1)
?arrange
library(ggplot2)
install.packages(ggplot2)"ggplot2"
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data(mpg)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
dtype(drv)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = clarity))
pwd
pwd()
wd()
cwd()
wd
getwd()
install.packages("shiny")
shiny::runApp('Shiny Practice/Simplest')
data(mpg)
data("mtcars")
library(ggplot2)
ggplot(data = mtcars) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, alpha = class, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, alpha = class, size = displ))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, alpha = displ, size = class))
library(ggplot2)
library(dplyr)
us <- map_data("state")
arr <- USArrests %>%
add_rownames("region") %>%
mutate(region = tolower(region))
gg <- ggplot()
gg <- gg + geom_map(data = us, map = us,
aes(x = long, y = lat, map_id = region),
fill = "#ffffff", color = "#ffffff", size = 0.15)
gg <- gg +geom_map(data = arr, map = us,
aes(fill = Murder, map_id = region),
color ="#ffffff", size = 0.15)
gg <- gg + scale_fill_continuous(low='thistle2', high='darkred',
guide='colorbar')
gg <- gg + labs(x=NULL, y=NULL)
gg <- gg + coord_map("albers", lat0 = 39, lat1 = 45)
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = elemenent_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
install.packages("hflights", "dplyr", "ggplot2", "plotly")
install.packages("hflights", "dplyr", "ggplot2", "plotly")
library(dplyr)
install.packages("hflights")
library(ggplot2)
install.packages("plotly")
install.packages("hflights")
library(hflights)
data("hflights")
hflights
View(hflights)
library(dplyr)
library(ggplot2)
library(plotly)
library(hflights)
summary(hflights)
flights_clean <- hflights %>%
na.omit()
hflights %>% # Read %>% as 'then'
filter(Month == 1 & DayofMonth == 1)
View(flights_clean)
summary(hflights)
hflights %>%
group_by(Month) %>%
summarise(nflights = n()) %>%
mutate(nflightdiff = nflights - lag(nflights),
nflightdiff = ifelse(is.na(nflightdiff), 0, nflightdiff))
hflights %>%
ggplot(aes(x = DepTime, y = DepDelay)) + geom_point()
hflights %>%
group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
ggplot(aes(x = Dest, y = avgDepDelay)) + geom_bar(stat = "identity")
hflights %>%
group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
View(hflights)
hflights %>%
group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
dplyr::group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
(function(df) group_by(df$Dest)) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
group_by(df$Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>% select(Dest)
hflights %>%
dplyr::group_by(Dest)
hflights %>%
dplyr::group_by(Dest) %>%
summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
dplyr::group_by(Dest) %>%
dplyr::summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plotly::plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
dplyr::group_by(Dest) %>%
dplyr::summarise(avgDepDelay = mean(DepDelay, na.rm = T))
hflights %>%
dplyr::group_by(Dest) %>%
dplyr::summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
plot_ly(x = Dest, y = avgDepDelay, type = "bar")
hflights %>%
dplyr::group_by(Dest) %>%
dplyr::summarise(avgDepDelay = mean(DepDelay, na.rm = T)) %>%
#filter(avgDepDelay >= 0 ) %>%
(function(df) plot_ly(df, x = df$Dest, y = df$avgDepDelay, type = "bar"))
brexit.data <- read.csv("uk_data.csv")
names(brexit.data)
brexit.data <- read.csv(./"uk_data.csv")
names(brexit.data)
brexit.data <- read.csv("/Users/abhi/Downloads/uk_data.csv")
names(brexit.data)
pairs(brexit.data[, -1], pch = 19, cex = .7, upper.panel = NULL)
output <- lm(pct_remain ~ uk_born + no_edu + mfct +
finance + over_60 + over_20_less_than35, data = brexit.data)
summary(output)
confint(output, level = .95)
install.packages(RPostgreSQL)
install.packages("RPostgreSQL")
matrix('NA', nrow = 3, ncol = 4)
library(datasets)
datasets::email50
library(email50)
data(email50)
pnorm(1.2857)*100
pnorm(0.5215)*100
xseq <- seq(-4,4,.01)
densities  <- dnorm(xseq, 0, 1)
plot(xseq, densities, col = "darkgreen", xlab = "", ylab = "Density", type = "l", lwd = 2, main = "Standard Normal")
abline(v = 1.2857,col = "red", xlab = 'Verbal')
abline(v = 0.5215,col = "blue")
?legend
getwd()
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv",delimiter = ',')
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv")
View(ratings)
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv")
dim(ratings)
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv")
dim(ratings)
users <- unique(ratings$userId)
dim(users)
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv")
dim(ratings)
users <- unique(ratings$userId)
users
setwd("/Users/abhi/Data_Science_1/Lab_2/")
ratings <- read.csv("ratings.csv")
dim(ratings)
users <- unique(ratings$userId)
d <- ratings[users,]
dim(d)
